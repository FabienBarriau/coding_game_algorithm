from the_labyrinth.func import ranges_from_direction, Direction

def test_ranges_from_direction():
    actual_node = (6, 6)
    row_range, col_range = ranges_from_direction(actual_node, Direction.RIGHT)
    assert list(row_range) == [4, 5, 6, 7, 8]
    assert list(col_range) == [7, 8]
    row_range, col_range = ranges_from_direction(actual_node, Direction.LEFT)
    assert list(row_range) == [4, 5, 6, 7, 8]
    assert list(col_range) == [4, 5]
    row_range, col_range = ranges_from_direction(actual_node, Direction.DOWN)
    assert list(row_range) == [7, 8]
    assert list(col_range) == [4, 5, 6, 7, 8]
    row_range, col_range = ranges_from_direction(actual_node, Direction.UP)
    assert list(row_range) == [4, 5]
    assert list(col_range) == [4, 5, 6, 7, 8]

def test_update_graph():
    scan = [
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "???######?????????????????????",
        "???######?????????????????????",
        "???##T...?????????????????????",
        "???######?????????????????????",
        "???######?????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
    ]
    exploratory_graph = ExploratoryGraph(start_node=(6, 5), init_scan=scan)